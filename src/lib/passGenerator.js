const crypto = require('crypto');

const isTest = () => !!process.env.IS_TEST;

const adjectives = ['偉', '分かり易', '力強', '危なげな', '名高', '嫌らし', '程良', '罪深', '見好', '手強', '物凄', '汚らわし', '物珍し', '与し易', '揺るぎ無', '並びな', '弱', '強',
  '素晴らし', '俗っぽ', 'ナウ', '凛凛し', '派手派手し', '厳つ', '若', 'めんこ', '大人っぽ', 'ちっちゃ', '愛くるし', '色っぽ', '艶っぽ', '馬鹿でか', 'うら若', '太',
  'ごっつ', 'でか', '幼', '粘り強', '真ん丸', '細長', '粘っこ', '丸っこ', '平べった', '厚ぼった', '小ちゃ', '脂っこ', '甘酸っぱ', 'ほろ苦', '果てし無', '青黒',
  '赤黒', '浅黒', '熱っぽ', '物凄まじ', '男らし', '微笑まし', '湿っぽ', '生暖か', 'えげつな', '義理堅', '甲斐甲斐し', '忘れっぽ', '腹黒', '賢し', '情け深', '惚れっぽ',
  '嫉妬深', '人懐こ', '愚痴っぽ', '慈悲深', '計算高', '遠慮深', '執念深', '幼気な', '切な', '痛痛し', '大人気な', '人間臭', '馴れ馴れし', 'テンションが高'];

const nouns = ['アイアイ', 'アカギツネ', 'アカクモザル', 'アカテタマリン', 'アカハナグマ', 'アジアゾウ', 'アジアタテガミヤマアラシ', 'アナグマ', 'アビシニアコロブス',
  'アフリカスイギュウ', 'アフリカゾウ', 'アメリカクロクマ', 'アメリカバイソン', 'アメリカビーバー', 'アライグマ', 'アルダブラゾウガメ', 'イランド', 'イリエワニ',
  'インパラ', 'ウンピョウ', 'エゾヒグマ', 'オウサマペンギン', 'オオアリクイ', 'オオカンガルー', 'オオタカ', 'オカピ', 'オグロヌー', 'オセロット', 'オランウータン',
  'カイウサギ', 'カバ', 'カピバラ', 'カラカル', 'カリフォルニアアシカ', 'カルガモ', 'キタリス', 'キリン', 'キンシコウ', 'グアナコ', 'クジャク', 'クズリ',
  'クビワオオコウモリ', 'クリップスプリンガー', 'クロサイ', 'コアラ', 'コアリクイ', 'コウノトリ', 'ゴールデンターキン', 'ゴールデンハムスター',
  'ゴールデンライオンタマリン', 'コクチョウ', 'コツメカワウソ', 'コビトカバ', 'ゴリラ', 'サーバル', 'サイ', 'サイチョウ', 'サバンナシマウマ', 'シシオザル',
  'シフゾウ', 'シマスカンク', 'シマリス', 'ジャイアントパンダ', 'シルバールトン', 'シロオリックス', 'シロサイ', 'シロテナガザル', 'スナネズミ', 'スローロリス',
  'ゾリラ', 'ダチョウ', 'タテガミオオカミ', 'タヌキ', 'タンチョウ', 'チーター', 'チュウベイバク', 'チンチラ', 'チンパンジー', 'ツキノワグマ', 'ツチブタ', 'ツバメ',
  'デグー', 'テングザル', 'トウホクノウサギ', 'ドール', 'トナカイ', 'トピ', 'トラ', 'ニホンイノシシ', 'ニホンカモシカ', 'ニホンザル', 'ニホンジカ', 'ニホンヤマネ',
  'ノウサギ', 'バーバリシープ', 'ハイイロオオカミ', 'ハクビシン', 'パタスモンキー', 'バンドウイルカ', 'ピグミーハリネズミ', 'ヒトコブラクダ', 'ヒメウォンバット',
  'ヒョウ', 'ビンツロング', 'フェネック', 'フェレット', 'フクロウ', 'フクロモモンガ', 'フタコブラクダ', 'ブチハイエナ', 'フラミンゴ', 'プレーリードッグ',
  'ベネットアカクビワラビー', 'ベンガルヤマネコ', 'ホッキョクグマ', 'ボンゴ', 'ホンドテン', 'マーラ', 'マレーグマ', 'マレーバク', 'ミーアキャット', 'ミケリス',
  'ミツオビアルマジロ', 'ミニブタ', 'ミミセンザンコウ', 'ムササビ', 'モルモット', 'ヤクシカ', 'ヤクシマザル', 'ユーラシアカワウソ', 'ユキヒョウ', 'ライオン', 'ラマ',
  'リスザル', 'レッサーパンダ', 'ロバ', 'ワオキツネザル', 'ワタボウシタマリン'];

function generateToken() {
  const data = Math.random().toString();
  return crypto.createHash('sha256').update(data).digest('base64');
}

function generatePass() {
  const adjIndex0 = isTest() ? 0 : Math.floor(Math.random() * adjectives.length);
  const adjIndex1 = isTest() ? 1 : Math.floor(Math.random() * adjectives.length);
  const nounIndex = isTest() ? 0 : Math.floor(Math.random() * nouns.length);

  return `${adjectives[adjIndex0]}く${adjectives[adjIndex1]}い${nouns[nounIndex]}`;
}

function getSalt(id) {
  return `:${id}@#JE(CJA#8`;
}

function hash(passphrase, id) {
  const salt = getSalt(id);
  const data = passphrase + salt;
  return crypto.createHash('sha256').update(data).digest('base64');
}

module.exports = {
  generateToken,
  generatePass,
  hash,
};
